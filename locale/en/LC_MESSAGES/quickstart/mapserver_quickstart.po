# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011~2018, OSGeo
# This file is distributed under the same license as the OSGeoLive package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: OSGeoLive 12.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-08-08 15:38-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../build/doc/quickstart/mapserver_quickstart.rst:22
msgid "MapServer Quickstart"
msgstr "MapServer Quickstart"

#: ../../build/doc/quickstart/mapserver_quickstart.rst:24
msgid ""
"MapServer is an `Open Source <http://www.opensource.org>`_ server based "
"application that allows you to publish geographic map images and vector data"
" through the internet using `OGC standards "
"<http://www.opengeospatial.org/standards>`__ such as `WMS "
"<http://www.opengeospatial.org/standards/wms>`__, `WFS "
"<http://www.opengeospatial.org/standards/wfs>`__, and `WCS "
"<http://www.opengeospatial.org/standards/wcs>`__."
msgstr ""
"MapServer is an `Open Source <http://www.opensource.org>`_ server based "
"application that allows you to publish geographic map images and vector data"
" through the internet using `OGC standards "
"<http://www.opengeospatial.org/standards>`__ such as `WMS "
"<http://www.opengeospatial.org/standards/wms>`__, `WFS "
"<http://www.opengeospatial.org/standards/wfs>`__, and `WCS "
"<http://www.opengeospatial.org/standards/wcs>`__."

#: ../../build/doc/quickstart/mapserver_quickstart.rst:36
msgid "Configure MapServer using the MapFile configuration file"
msgstr "Configure MapServer using the MapFile configuration file"

#: ../../build/doc/quickstart/mapserver_quickstart.rst:40
msgid ""
"**What will I learn ?** In this section, you will learn what a MapFile is "
"and how to configure it to allow MapServer to serve a shapefile as images "
"using WMS requests."
msgstr ""
"**What will I learn ?** In this section, you will learn what a MapFile is "
"and how to configure it to allow MapServer to serve a shapefile as images "
"using WMS requests."

#: ../../build/doc/quickstart/mapserver_quickstart.rst:45
msgid "What is a MapFile ?"
msgstr "What is a MapFile ?"

#: ../../build/doc/quickstart/mapserver_quickstart.rst:47
msgid ""
"The `Mapfile <http://mapserver.org/mapfile/index.html>`_ is the "
"configuration file that MapServer uses to render geospatial data as images "
"or vector data. Its main purpose is to define the layers it can draw, how to"
" read necessary data, and how to render it (e.g. color, symbol, label, "
"etc...)."
msgstr ""
"The `Mapfile <http://mapserver.org/mapfile/index.html>`_ is the "
"configuration file that MapServer uses to render geospatial data as images "
"or vector data. Its main purpose is to define the layers it can draw, how to"
" read necessary data, and how to render it (e.g. color, symbol, label, "
"etc...)."

#: ../../build/doc/quickstart/mapserver_quickstart.rst:53
msgid "Creating my first MapFile"
msgstr "Creating my first MapFile"

#: ../../build/doc/quickstart/mapserver_quickstart.rst:55
msgid ""
"Open any text editor (e.g. :menuselection:`Applications --> Accessories --> "
"Leafpad`)."
msgstr ""
"Open any text editor (e.g. :menuselection:`Applications --> Accessories --> "
"Leafpad`)."

#: ../../build/doc/quickstart/mapserver_quickstart.rst:57
msgid ""
"Create the file \"mapserver_quickstart.map\" in your home directory: "
":file:`/home/user/mapserver_quickstart.map`"
msgstr ""
"Create the file \"mapserver_quickstart.map\" in your home directory: "
":file:`/home/user/mapserver_quickstart.map`"

#: ../../build/doc/quickstart/mapserver_quickstart.rst:60
msgid "Put the following content in it::"
msgstr "Put the following content in it::"

#: ../../build/doc/quickstart/mapserver_quickstart.rst:98
msgid ""
"The example uses the natural earth dataset, which is already installed on "
"the live dvd at :file:`~/data/natural_earth2` (a short cut to "
":file:`/usr/local/share/data/natural_earth2`)."
msgstr ""
"The example uses the natural earth dataset, which is already installed on "
"the live dvd at :file:`~/data/natural_earth2` (a short cut to "
":file:`/usr/local/share/data/natural_earth2`)."

#: ../../build/doc/quickstart/mapserver_quickstart.rst:102
msgid ""
"Each object in a MapFile starts with its name (for example **MAP**) and ends"
" with an **END**.  A MapFile always starts with the **MAP** object and "
"should contain a list of **LAYER** objects the MapFile can read and draw. In"
" our MapFile, we currently have only one layer defined."
msgstr ""
"Each object in a MapFile starts with its name (for example **MAP**) and ends"
" with an **END**.  A MapFile always starts with the **MAP** object and "
"should contain a list of **LAYER** objects the MapFile can read and draw. In"
" our MapFile, we currently have only one layer defined."

#: ../../build/doc/quickstart/mapserver_quickstart.rst:107
msgid ""
"Let's take a look at some of the objects (and properties) defined in our "
"MapFile:"
msgstr ""
"Let's take a look at some of the objects (and properties) defined in our "
"MapFile:"

#: ../../build/doc/quickstart/mapserver_quickstart.rst:110
msgid ""
"EXTENT: sets the default geospatial bounding box for this configuration."
msgstr ""
"EXTENT: sets the default geospatial bounding box for this configuration."

#: ../../build/doc/quickstart/mapserver_quickstart.rst:111
msgid ""
"LAYER: defines access and display properties for a spatial dataset.  We'll "
"add another layer later."
msgstr ""
"LAYER: defines access and display properties for a spatial dataset.  We'll "
"add another layer later."

#: ../../build/doc/quickstart/mapserver_quickstart.rst:113
msgid ""
"SHAPEPATH: sets a base path for file-based data (e.g. shapefiles or tiff "
"images)."
msgstr ""
"SHAPEPATH: sets a base path for file-based data (e.g. shapefiles or tiff "
"images)."

#: ../../build/doc/quickstart/mapserver_quickstart.rst:116
msgid ""
"If we look closer at the **LAYER** in our MapFile, we'll see that it "
"contains a bunch of properties and objects too. Among them are:"
msgstr ""
"If we look closer at the **LAYER** in our MapFile, we'll see that it "
"contains a bunch of properties and objects too. Among them are:"

#: ../../build/doc/quickstart/mapserver_quickstart.rst:119
msgid ""
"STATUS: defines whether the layer can be drawn (*ON*), can't be drawn "
"(*OFF*) or is always drawn (*DEFAULT*)."
msgstr ""
"STATUS: defines whether the layer can be drawn (*ON*), can't be drawn "
"(*OFF*) or is always drawn (*DEFAULT*)."

#: ../../build/doc/quickstart/mapserver_quickstart.rst:121
msgid ""
"TYPE: the geometry type that MapServer should use when rendering the data as"
" an image. In our MapFile, the data will be drawn as *polygons*."
msgstr ""
"TYPE: the geometry type that MapServer should use when rendering the data as"
" an image. In our MapFile, the data will be drawn as *polygons*."

#: ../../build/doc/quickstart/mapserver_quickstart.rst:123
msgid ""
"DATA: the name of the spatial data file this layer uses, in this case a "
"shapefile."
msgstr ""
"DATA: the name of the spatial data file this layer uses, in this case a "
"shapefile."

#: ../../build/doc/quickstart/mapserver_quickstart.rst:125
msgid ""
"CLASS: determines how to draw a layer (styling). We'll cover this object in "
"more detail later."
msgstr ""
"CLASS: determines how to draw a layer (styling). We'll cover this object in "
"more detail later."

#: ../../build/doc/quickstart/mapserver_quickstart.rst:130
msgid ""
"A complete list of the available objects and properties a MapFile can have "
"can be found in the `MapServer documentation page "
"<http://mapserver.org/mapfile/index.html>`_."
msgstr ""
"A complete list of the available objects and properties a MapFile can have "
"can be found in the `MapServer documentation page "
"<http://mapserver.org/mapfile/index.html>`_."

#: ../../build/doc/quickstart/mapserver_quickstart.rst:137
msgid "Render a map image with MapServer using a WMS **GetMap** request"
msgstr "Render a map image with MapServer using a WMS **GetMap** request"

#: ../../build/doc/quickstart/mapserver_quickstart.rst:141
msgid ""
"**What will I learn ?** You will learn how to use to render an image with "
"layers from a MapFile with MapServer using an OGC WMS request."
msgstr ""
"**What will I learn ?** You will learn how to use to render an image with "
"layers from a MapFile with MapServer using an OGC WMS request."

#: ../../build/doc/quickstart/mapserver_quickstart.rst:144
msgid "Open a web browser and enter the following URL::"
msgstr "Open a web browser and enter the following URL::"

#: ../../build/doc/quickstart/mapserver_quickstart.rst:148
msgid ""
"What does the above mean?  If we put it in simple words, it's a `Web Map "
"Service (WMS) <http://www.opengeospatial.org/standards/wms>`_ **GetMap** "
"request that tells MapServer to \"*use the following MapFile to render the "
"specified layers as a png image based on some user-supplied parameters such "
"as image size, geographical extent, projection, etc.*\".  All layers "
"specified in the \"*&LAYERS=...*\" property having *STATUS ON* in the "
"MapFile will be rendered in addition to all layers with *STATUS DEFAULT*. "
"The result looks like the following:"
msgstr ""
"What does the above mean?  If we put it in simple words, it's a `Web Map "
"Service (WMS) <http://www.opengeospatial.org/standards/wms>`_ **GetMap** "
"request that tells MapServer to \"*use the following MapFile to render the "
"specified layers as a png image based on some user-supplied parameters such "
"as image size, geographical extent, projection, etc.*\".  All layers "
"specified in the \"*&LAYERS=...*\" property having *STATUS ON* in the "
"MapFile will be rendered in addition to all layers with *STATUS DEFAULT*. "
"The result looks like the following:"

#: ../../build/doc/quickstart/mapserver_quickstart.rst:162
msgid ""
"All parameters of the request are WMS-specific, except "
"\"*?map=/home/user/mapserver_quickstart.map*\", which is MapServer-specific."
msgstr ""
"All parameters of the request are WMS-specific, except "
"\"*?map=/home/user/mapserver_quickstart.map*\", which is MapServer-specific."

#: ../../build/doc/quickstart/mapserver_quickstart.rst:168
msgid "Render a map image with MapServer using the command line"
msgstr "Render a map image with MapServer using the command line"

#: ../../build/doc/quickstart/mapserver_quickstart.rst:170
msgid ""
"Although MapServer is geared towards web applications, it can also produce "
"images on the command line. This can be useful if you are looking for "
"repetitive mapping, or while debugging."
msgstr ""
"Although MapServer is geared towards web applications, it can also produce "
"images on the command line. This can be useful if you are looking for "
"repetitive mapping, or while debugging."

#: ../../build/doc/quickstart/mapserver_quickstart.rst:174
msgid ""
"Open a terminal (:menuselection:`Applications --> Accessories --> Terminal "
"Emulator`) and type::"
msgstr ""
"Open a terminal (:menuselection:`Applications --> Accessories --> Terminal "
"Emulator`) and type::"

#: ../../build/doc/quickstart/mapserver_quickstart.rst:179
msgid ""
"If this command runs successfully, you are able to see your rendered map at "
"file:///home/user/mymap.png."
msgstr ""
"If this command runs successfully, you are able to see your rendered map at "
"file:///home/user/mymap.png."

#: ../../build/doc/quickstart/mapserver_quickstart.rst:185
msgid "Add a new layer to the MapFile to serve a local shapefile"
msgstr "Add a new layer to the MapFile to serve a local shapefile"

#: ../../build/doc/quickstart/mapserver_quickstart.rst:189
msgid ""
"**What will I learn ?** You will learn how to add a new layer object "
"definition to your MapFile."
msgstr ""
"**What will I learn ?** You will learn how to add a new layer object "
"definition to your MapFile."

#: ../../build/doc/quickstart/mapserver_quickstart.rst:192
msgid ""
"We will now add a new layer to our MapFile. Before the last *END* statement "
"in the MapFile, add the following layer configuration::"
msgstr ""
"We will now add a new layer to our MapFile. Before the last *END* statement "
"in the MapFile, add the following layer configuration::"

#: ../../build/doc/quickstart/mapserver_quickstart.rst:207
msgid ""
"Now we have 2 layer definitions in our MapFile. Note that the new one we "
"just added has the \"STATUS\" property set to \"ON\". That means that unless"
" we specifically request it, it won't be rendered."
msgstr ""
"Now we have 2 layer definitions in our MapFile. Note that the new one we "
"just added has the \"STATUS\" property set to \"ON\". That means that unless"
" we specifically request it, it won't be rendered."

#: ../../build/doc/quickstart/mapserver_quickstart.rst:211
msgid ""
"Let's take our previous WMS **GetMap** request and add our new \"Lakes\" "
"layer to the image rendered. We simply need to add the new layer name to the"
" \"LAYERS\" property list::"
msgstr ""
"Let's take our previous WMS **GetMap** request and add our new \"Lakes\" "
"layer to the image rendered. We simply need to add the new layer name to the"
" \"LAYERS\" property list::"

#: ../../build/doc/quickstart/mapserver_quickstart.rst:217
msgid ""
"The image rendered by MapServer looks like our previous map, but with the "
"addition of the lakes from our new layer:"
msgstr ""
"The image rendered by MapServer looks like our previous map, but with the "
"addition of the lakes from our new layer:"

#: ../../build/doc/quickstart/mapserver_quickstart.rst:226
msgid "Style a layer using MapFile configurations"
msgstr "Style a layer using MapFile configurations"

#: ../../build/doc/quickstart/mapserver_quickstart.rst:230
msgid ""
"**What will I learn ?** You will see an example of styling elements inside a"
" layer depending on some of its data properties."
msgstr ""
"**What will I learn ?** You will see an example of styling elements inside a"
" layer depending on some of its data properties."

#: ../../build/doc/quickstart/mapserver_quickstart.rst:233
msgid ""
"In a MapFile, a LAYER object can contain an infinite number of CLASS "
"objects. These are used to style the elements contained in the spatial data "
"file (DATA). For example, if we look closer at our \"ne_10m_lakes\" data "
"file using a tool such as `ogrinfo <http://www.gdal.org/ogrinfo.html>`_, "
"we'll see the geometry and attribute definitions it contains. These "
"attribute values can be used as a way to draw the elements inside a dataset "
"differently using multiple CLASS objects."
msgstr ""
"In a MapFile, a LAYER object can contain an infinite number of CLASS "
"objects. These are used to style the elements contained in the spatial data "
"file (DATA). For example, if we look closer at our \"ne_10m_lakes\" data "
"file using a tool such as `ogrinfo <http://www.gdal.org/ogrinfo.html>`_, "
"we'll see the geometry and attribute definitions it contains. These "
"attribute values can be used as a way to draw the elements inside a dataset "
"differently using multiple CLASS objects."

#: ../../build/doc/quickstart/mapserver_quickstart.rst:241
msgid ""
"In our \"ne_10m_lakes\" dataset, we have a *ScaleRank* attribute, which "
"seems to be related ot the size of the lakes. We can use this as a way to "
"render the lakes differently. In the LAYER object, we'll add another CLASS "
"object just before our current one::"
msgstr ""
"In our \"ne_10m_lakes\" dataset, we have a *ScaleRank* attribute, which "
"seems to be related ot the size of the lakes. We can use this as a way to "
"render the lakes differently. In the LAYER object, we'll add another CLASS "
"object just before our current one::"

#: ../../build/doc/quickstart/mapserver_quickstart.rst:266
msgid ""
"What does our new CLASS object do? It basically tells MapServer to draw the "
"elements having the \"ScaleRank\" property equal to \"0\" or \"1\" with a "
"black outline. Class objects are always read from the top to the bottom for "
"each feature to be drawn. When a feature matches the \"EXPRESSION\" "
"specified in a class, that class is going to render the feature. If the "
"feature does not match a class the next class is checked. If a feature does "
"not match any class then it is not rendered at all but if the last class in "
"a layer contains no EXPRESSION then that class acts as a default. The LAYER "
"\"CLASSITEM\" property tells MapServer which attribute to use when "
"evaluating EXPRESSIONs defined in the CLASS objects."
msgstr ""
"What does our new CLASS object do? It basically tells MapServer to draw the "
"elements having the \"ScaleRank\" property equal to \"0\" or \"1\" with a "
"black outline. Class objects are always read from the top to the bottom for "
"each feature to be drawn. When a feature matches the \"EXPRESSION\" "
"specified in a class, that class is going to render the feature. If the "
"feature does not match a class the next class is checked. If a feature does "
"not match any class then it is not rendered at all but if the last class in "
"a layer contains no EXPRESSION then that class acts as a default. The LAYER "
"\"CLASSITEM\" property tells MapServer which attribute to use when "
"evaluating EXPRESSIONs defined in the CLASS objects."

#: ../../build/doc/quickstart/mapserver_quickstart.rst:277
msgid ""
"The result of this new addition should make the big lakes in our map image "
"rendered with a black outline:"
msgstr ""
"The result of this new addition should make the big lakes in our map image "
"rendered with a black outline:"

#: ../../build/doc/quickstart/mapserver_quickstart.rst:285
msgid ""
"Learn more about `EXPRESSIONS "
"<http://mapserver.org/mapfile/expressions.html>`_ in MapServer."
msgstr ""
"Learn more about `EXPRESSIONS "
"<http://mapserver.org/mapfile/expressions.html>`_ in MapServer."

#: ../../build/doc/quickstart/mapserver_quickstart.rst:290
msgid "What Next?"
msgstr "What Next?"

#: ../../build/doc/quickstart/mapserver_quickstart.rst:292
msgid ""
"This is a simple example, but you can do much, much more. The MapServer "
"project website contains many resources to help you get started. Here's a "
"few resources to check out next:"
msgstr ""
"This is a simple example, but you can do much, much more. The MapServer "
"project website contains many resources to help you get started. Here's a "
"few resources to check out next:"

#: ../../build/doc/quickstart/mapserver_quickstart.rst:296
msgid ""
"Read the `Introduction to MapServer "
"<http://mapserver.org/introduction.html#introduction>`_."
msgstr ""
"Read the `Introduction to MapServer "
"<http://mapserver.org/introduction.html#introduction>`_."

#: ../../build/doc/quickstart/mapserver_quickstart.rst:298
msgid ""
"Have a look at the `MapServer Tutorial "
"<http://www.mapserver.org/tutorial/index.html>`_ which contains more MapFile"
" examples."
msgstr ""
"Have a look at the `MapServer Tutorial "
"<http://www.mapserver.org/tutorial/index.html>`_ which contains more MapFile"
" examples."

#: ../../build/doc/quickstart/mapserver_quickstart.rst:301
msgid ""
"Check the `OGC Support and Configuration "
"<http://www.mapserver.org/ogc/index.html>`_ to learn more about OGC "
"standards in MapServer (WMS, WFS, SLD, WFS Filter Encoding, WCS, SOS, etc.)."
msgstr ""
"Check the `OGC Support and Configuration "
"<http://www.mapserver.org/ogc/index.html>`_ to learn more about OGC "
"standards in MapServer (WMS, WFS, SLD, WFS Filter Encoding, WCS, SOS, etc.)."

#: ../../build/doc/quickstart/mapserver_quickstart.rst:304
msgid ""
"Ready to use MapServer? Then join the community on the `Mailing Lists "
"<http://www.mapserver.org/community/lists.html>`_ to exchange ideas, discuss"
" potential software improvements and ask questions."
msgstr ""
"Ready to use MapServer? Then join the community on the `Mailing Lists "
"<http://www.mapserver.org/community/lists.html>`_ to exchange ideas, discuss"
" potential software improvements and ask questions."
